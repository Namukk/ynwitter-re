{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","getMyNweets","collection","where","uid","get","ynweets","console","log","docs","map","doc","data","useEffect","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","alt","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","onSnapshot","snapshot","nweetArray","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42b6b0ab.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  //   const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    // history.push(\"/\"); 6번과 10번줄을 사용해도 라우터에서 사용한 <Redirect> 태그와 같은 효과. 로그아웃해도 프로필에 남아있는 현상 해결 가능.\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  const getMyNweets = async () => {\n    const ynweets = await dbService\n      .collection(\"Ynweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      // .orderBy(\"createdAt\")\n      .get();\n    console.log(ynweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    console.log(value);\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are u sure that u want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`Ynweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`Ynweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your ynweet\"\n              value={newNweet}\n              onChange={onChange}\n              required\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Ynweet\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"imageSrc\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const ynweets = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"Ynweets\").add(ynweets);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Write what u want to say\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"imageSrc\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\n//Home\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  // const getNweets = async () => {\n  //   const dbNweets = await dbService.collection(\"Ynweets\").get();\n  //   dbNweets.forEach((document) => {\n  //     const nweetObject = {\n  //       ...document.data(),\n  //       id: document.id,\n  //     };\n  //     setNweets((prev) => [nweetObject, ...prev]);\n  //   });\n  // };  ** Old version 이거보다는 getNweets() 지우고 map 쓰는게 더 좋음 for realtime\n\n  useEffect(() => {\n    // getNweets()\n    dbService.collection(\"Ynweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  //Old version과는 달리 re-render 하지 않아도 돼서 더 좋음.\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Profile from \"../routes/Profile\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n              <Redirect from=\"*\" to=\"/\" />\n            </div>\n          ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n              <Redirect from=\"*\" to=\"/\" />\n            </>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null); //usrObj는 많은 곳에서 필요로 하기 때문에 앱의 가장 위쪽에서 만들고 Router로 이동. ex) Home, Auth, EditProfile, Profile 등등.\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid.refreshUser,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        // setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      // else {\n      //   setIsLoggedIn(false);\n      // }\n      // 7번, 17번, 20-22번 지우고 23번에 isLoggedIn={isLoggedIn} 대신에 isLoggedIn={Boolean(userObj)} 써도 같음. userObj일 때만 로그인 할테니까\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid.refreshUser,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}